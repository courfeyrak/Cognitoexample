openapi: 3.0.0
info:
  description: |
    Token champions Api Definition
  version: 1.0.0-oas3
  title: Token Champions
  termsOfService: http://tokenchampions.com/api/terms/
  contact:
    email: tokenchampionsapi@tokenchampions.com
  license:
    name: Token Champios all rigths reserved
    url: http://www.tokenchampions.com/licenses/LICENSE-2.0.html
servers:
  - description: DevEnv
    url: https://exbfyipti5.execute-api.us-east-1.amazonaws.com
tags:
  - name: TokenyQualifications
    description: Tokeny integration
paths:
  /tokeny/servicing/actions/mint/batch:
    post:
      tags:
        - TokenyServicing
      summary: Mint tokens
      operationId: TokenyServicingMintTokens 
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenyMintTokenReq'
      security:
        - bearer_auth: []
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyMintTokenBatchRes'
  /tokeny/servicing/actions/mint/validate:
    post:
      tags:
        - TokenyServicing
      summary: Optionally there is a validation endpoint  that can be called before mint one to make sure parameters are correct by calling
      operationId: TokenyValidateMint  
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenyMintTokenReq'
      security:
        - bearer_auth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyMintValidateRes'
  /tokeny/servicing/actions/unfreeze/batch:
    post:
      tags:
        - TokenyServicing
      summary: unfreeze tokens
      operationId: TokenyUnFreezeTokens  
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenyMintTokenReq'
      security:
        - bearer_auth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyMintValidateRes'
  /tokeny/servicing/actions/burn/batch:
    post:
      tags:
        - TokenyServicing
      summary: burn tokens
      operationId: TokenyBurnTokens   
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenyMintTokenReq'
      security:
        - bearer_auth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyMintValidateRes'
  /tokeny/servicing/actions/freeze/batch:
    post:
      tags:
        - TokenyServicing
      summary: freeze tokens
      operationId: TokenyFreezeTokens   
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenyMintTokenReq'
      security:
        - bearer_auth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyMintValidateRes'
  /tokeny/servicing/transactions:
    get:
      tags:
        - TokenyServicing
      summary: transactions
      operationId: TokenyMintTransactions
      security:
        - bearer_auth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyTransactionsRes'
  /tokeny/servicing/holders:
    get:
      tags:
        - TokenyServicing
      summary: TokenyQualificationsGetInvStatusBalance 
      operationId: TokenyQualificationsGetInvStatusBalance 
      security:
        - bearer_auth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyHolders'
  /tokeny/servicing/holders/whitelist:
    post:
      tags:
        - TokenyServicing
      summary: Trigger Qualification process
      operationId: TokenyServicingQualificationProcess 
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenyCandidatesOnfidoReq'
      security:
        - bearer_auth: []
      responses:
        '204':
          description: No Content
  /tokeny/servicing/candidates:
      get:
        tags:
          - TokenyServicing
        summary: Get identity Id created and wallet selected during Qualification process
        operationId: TokenyServicingGetCandidates 
        security:
          - bearer_auth: []
        responses:
          '206':
            description: Partial Content
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TokenyCandidates'
  /tokeny/servicing/candidates/onfido-check:
    post:
      tags:
        - TokenyServicing
      summary: To trigger Onfido check
      operationId: TokenyServicingTriggerOnfidoCheck 
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenyCandidatesOnfidoReq'
      security:
        - bearer_auth: []
      responses:
        '204':
          description: No Content
  /tokeny/users:
    post:
      tags:
        - tokeny
      summary: Create a new user in tokeny
      description: Create a new user in tokeny
      operationId: TokenyCreateUser 
      security:
        - bearer_auth: []
      responses:
        '201':
          description: Success created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyUser'
        '401':
          description: the user sent in the autorizarion does not have access
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyError'
  /tokeny/users/tat:
    get:
      tags:
        - tokeny
      summary: gets the Tokeny access token for the user
      operationId: TokenyGetTaT
      security:
        - bearer_auth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyUserTaT'
        '401':
          description: the user sent in the autorizarion does not have access
  /tokeny/users/qualifications/status:
    get:
      tags:
        - TokenyQualifications
      summary: gets the Tokeny estatus
      operationId: TokenyQualificationsGetInvStatus
      security:
        - bearer_auth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyQualification'
        '401':
          description: the user sent in the autorizarion does not have access
  /tokeny/users/qualifications/maindata:
    get:
      tags:
        - TokenyQualifications
      summary: Get identity Id created and wallet selected during Qualification process
      operationId: TokenyQualificationsGetInvMainData 
      security:
        - bearer_auth: []
      responses:
        '206':
          description: Partial Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenyMainData'

externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
components:
  schemas:
    TokenyTransactionsRes:
      type: object
      properties: 
        items: 
          type: array
          items: 
            type: object
            properties: 
              type: 
                type: string
                example: burn
              id: 
                type: string
                example: 0xa2522cb9a7917b2f14a350308856d4a9abb2688588b436cf6b960ee409b41227-0x0d37d9e06329111fb2e8b63e7a22142e80c26622-0x0000000000000000000000000000000000000000-0
              datetime: 
                type: string
                example: 2021-10-27T01:12:40.000Z
              amount: 
                type: string
                example: 1
              transactionHash: 
                type: string
                example: 0xa2522cb9a7917b2f14a350308856d4a9abb2688588b436cf6b960ee409b41227
              sender: 
                type: object
                properties: 
                  wallet: 
                    type: string
                    example: 0x0d37d9e06329111fb2e8b63e7a22142e80c26622
                  balance: 
                    type: string
                    example: 96
                  frozenBalance: 
                    type: string
                    example: 1
                  unfrozenBalance: 
                    type: string
                    example: 95
                  isWalletFrozen: 
                    type: boolean
                  details: 
                    type: object
                    properties: 
                      message: 
                        type: string
                        example: The holder is not registered or you are missing access rights to read its information.
              recipient: 
                type: object
                properties: 
                  wallet: 
                    type: string
                    example: 0x0000000000000000000000000000000000000000
                  details: 
                    type: object
                    properties: 
                      message: 
                        type: string
                        example: The holder is not registered or you are missing access rights to read its information.
              totalSupplyAfter: 
                type: string
                example: 317
              status: 
                type: string
                example: CONFIRMED
        itemsReturned: 
          type: integer
          format: int32
          example: 20
        totalItemsFound: 
          type: integer
          format: int32
          example: 48
        totalPagesFound: 
          type: integer
          format: int32
          example: 3
        firstPageOffset: 
          type: integer
          format: int32
          example: 0
        lastPageOffset: 
          type: integer
          format: int32
          example: 40
        currentPage: 
          type: integer
          format: int32
          example: 1
        previousPageOffset: 
          type: string
          format: nullable
        nextPageOffset: 
          type: integer
          format: int32
          example: 20
    TokenyHolders:
      type: object
      properties: 
        items: 
          type: array
          items: 
            type: object
            properties: 
              id: 
                type: string
                example: 51e9a67d-c802-41ce-8518-ed69480cb4e5
              typeOfInvestor: 
                type: string
                example: individual
              email: 
                type: string
                example: antoniusproximo@outlook.com
              identityAddress: 
                type: string
                example: 0xac77abbfe822db8316a131571c145ff09055a308
              identityId: 
                type: string
                example: 57a64aa3-3c67-4eee-bcd6-b519d8f2b40d
              wallet: 
                type: string
                example: 0x09f05d5213de4b3d35788271c561f82062b5ecda
              provider: 
                type: string
                example: USER_MANAGED
              identityAuthorized: 
                type: boolean
              status: 
                type: string
                example: TokenHolder
              balance: 
                type: string
                example: 150
              frozenBalance: 
                type: string
                example: 100
              unfrozenBalance: 
                type: string
                example: 50
              isWalletFrozen: 
                type: boolean
              decimals: 
                type: integer
                format: int32
                example: 0
              lastTransaction: 
                type: string
                example: 1634855714
              country: 
                type: string
                example: LIE
              investor: 
                type: string
                example: Antonio Pedraza
              updatedAt: 
                type: string
                example: 2021-07-08T14:48:22.308Z
              individual: 
                type: object
                properties: 
                  birthday: 
                    type: string
                    example: 1980-05-21T00:00:00.000Z
                  birthplace: 
                    type: string
                    example: Luxembourg
                  firstName: 
                    type: string
                    example: Antonio
                  gender: 
                    type: string
                    example: Male
                  idNumber: 
                    type: string
                    example: 12345678
                  lastName: 
                    type: string
                    example: Pedraza
                  nationality: 
                    type: string
                    example: LIE
                  occupation: 
                    type: string
                    example: Finance
                  passportNumber: 
                    type: string
                    example: 87654321
                  phone: 
                    type: string
                    example: +352 28810201
                  politicallyExposed: 
                    type: boolean
                  buildingNumber: 
                    type: string
                    example: 123
                  street: 
                    type: string
                    example: Street
                  city: 
                    type: string
                    example: Luxembourg
                  country: 
                    type: string
                    example: LIE
                  zipCode: 
                    type: string
                    example: 12345
              institutional: 
                type: string
                format: nullable
        itemsReturned: 
          type: integer
          format: int32
          example: 1
        totalItemsFound: 
          type: integer
          format: int32
          example: 1
        totalPagesFound: 
          type: integer
          format: int32
          example: 1
        firstPageOffset: 
          type: integer
          format: int32
          example: 0
        lastPageOffset: 
          type: integer
          format: int32
          example: 0
        currentPage: 
          type: integer
          format: int32
          example: 1
        previousPageOffset: 
          type: string
          format: nullable
        nextPageOffset: 
          type: string
          format: nullable

    TokenyMintValidateRes:
      type: object
      properties: 
        gasEstimation: 
          type: string
          example: 
        transactionData: 
          type: string
          example: 0x685731070000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000d37d9e06329111fb2e8b63e7a22142e80c266220000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000a
        agentWallet: 
          type: string
          format: nullable
    TokenyMintTokenReq:
      type: object
      properties:
        ethereumNetwork: 
          type: string
        transactions: 
          type: array
          items: 
            type: object
            properties: 
              address: 
                type: string
              amount: 
                type: string
    TokenyMintTokenBatchRes:
      type: object
      properties:
        transactionId: 
          type: string
        hash: 
          type: string
        id: 
          type: string
    TokenyCandidates:
      type: object
      properties: 
        items: 
          type: array
          items: 
            type: object
            properties: 
              email: 
                type: string
              id: 
                type: string
              kycProvider: 
                type: string
                format: nullable
              kycStatus: 
                type: string
              lastLogin: 
                type: string
              createdAt: 
                type: string
              name: 
                type: string
              currentSection: 
                type: string
              status: 
                type: string
              investorType: 
                type: string
              country: 
                type: string
              wallet: 
                type: string
                format: nullable
              walletProvider: 
                type: string
                format: nullable
        itemsReturned: 
          type: integer
          format: int32
        totalItemsFound: 
          type: integer
          format: int32
        totalPagesFound: 
          type: integer
          format: int32
        firstPageOffset: 
          type: integer
          format: int32
        lastPageOffset: 
          type: integer
          format: int32
        currentPage: 
          type: integer
          format: int32
        previousPageOffset: 
          type: string
          format: nullable
        nextPageOffset: 
          type: string
          format: nullable
    TokenyCandidatesOnfidoReq:
      type: object
      properties:
        ethereumNetwork: 
          type: string
        identityIds: 
          type: array
          items: 
            type: string
        wallets: 
          type: array
          items: 
            type: string
    TokenyQualification:
      type: object
      description: >-
        If status does not exists (304) or status = recorded or registered, this
        means investor has  never accessed qualification funnel or has not get
        to the final of the funnel -> redirect to Tokenchampions qualification
        funnel
      properties:
        allowedCountries:
          type: array
          items:
            type: string
        name:
          type: string
          description: always set to TokenyQualification
        languages:
          type: array
          items:
            type: string
        investorPortalUrl:
          type: string
        milestones:
          type: array
          items:
            type: string
        progress:
          type: integer
        investorStatus:
          type: string
          description: >-
            this means investor has got to the final of the funnel, so kyc check
            is pending to be triggered or investor has already been kyc checked
            -> proceed with the purchase flow (step 3).
          enum:
            - banned
            - recorded
            - registered
            - pending
            - approved
            - authorized
            - unauthorized
            - revoked
    TokenyMainData:
      type: object
      description: >-
        identity Id created and wallet selected during Qualification process
      properties:
        id: 
          type: string
        label: 
          type: string
        status: 
          type: string
        elements: 
          type: array
          items: 
            type: object
            properties: 
              fields: 
                type: array
                items: 
                  type: object
                  properties: 
                    id: 
                      type: string
                    type: 
                      type: string
                    label: 
                      type: string
                    value: 
                      type: string
                    helperText: 
                      type: string
                    required: 
                      type: boolean
                    standard: 
                      type: boolean
              id: 
                type: string
              layout: 
                type: string
              legend: 
                type: string
              type: 
                type: string
        warnOnUpdate: 
          type: boolean
        instructions: 
          type: string
    TokenyData:
      type: object
      properties:
        accountProviderId:
          type: string
        accountUserId:
          type: string
    TokenyError:
      type: object
      description: error message when a users already exists
      properties:
        error:
          type: string
        name:
          type: string
        data:
          $ref: '#/components/schemas/TokenyData'
    TokenyUserTaT:
      type: object
      properties:
        token:
          type: string
          description: tokeny access token
        issuedAt:
          type: integer
          description: Unix datetime
        expiresIn:
          type: integer
          description: Unix datetime
    TokenyUser:
      type: object
      properties:
        providerId:
          type: string
          description: Cognito id token
        sharedAccountId:
          type: string
          description: Cognito id token
        UserId:
          type: string
        email:
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    TokenyUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenyUser'
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TokenyUser'
      description: List of user object
      required: true
  securitySchemes:
    bearer_auth:
      description: Aws id_token for the autenticated user.
      type: http
      scheme: bearer
      bearerFormat: JWT
